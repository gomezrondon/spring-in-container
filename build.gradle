plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.jetbrains.kotlin.jvm' version '1.4.0'
	id 'com.google.cloud.tools.jib' version '2.5.0'
}



group = 'com.gomezrondon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

dependencies {

	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-kubernetes'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


bootJar{
	layered()
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

import org.apache.tools.ant.taskdefs.condition.Os



ext {
	set('gcpProjectName', "ut-265822")
	set('gcpProjectVersion', "v1")
}

bootBuildImage {
	imageName = "gcr.io/${gcpProjectName}/${project.name}:${gcpProjectVersion}"
	//imageName = "${project.name}:${gcpProjectVersion}"
}

jib.to.image = "gcr.io/${gcpProjectName}/${project.name}:${gcpProjectVersion}"


task pushImageToGCR(type:Exec){
	dependsOn bootBuildImage
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		commandLine 'bash', '-c', "docker push ${bootBuildImage.imageName}"
	}else
	if (Os.isFamily(Os.FAMILY_UNIX)) {
		println "*** Linux "
		commandLine 'bash', '-c', "docker push ${bootBuildImage.imageName}"
	}
}

